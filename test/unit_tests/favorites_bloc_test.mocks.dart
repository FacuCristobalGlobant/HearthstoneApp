// Mocks generated by Mockito 5.3.0 from annotations
// in hearthstoneapp/test/unit_tests/favorites_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:hearthstoneapp/src/data/datasource/local/DAOs/firestore_database.dart'
    as _i2;
import 'package:hearthstoneapp/src/data/model/hearthstone_card.dart' as _i5;
import 'package:hearthstoneapp/src/data/repository/favorites_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirestoreDatabase_0 extends _i1.SmartFake
    implements _i2.FirestoreDatabase {
  _FakeFirestoreDatabase_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [FavoritesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoritesRepository extends _i1.Mock
    implements _i3.FavoritesRepository {
  MockFavoritesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirestoreDatabase get firestoreDatabase =>
      (super.noSuchMethod(Invocation.getter(#firestoreDatabase),
              returnValue: _FakeFirestoreDatabase_0(
                  this, Invocation.getter(#firestoreDatabase)))
          as _i2.FirestoreDatabase);
  @override
  set firestoreDatabase(_i2.FirestoreDatabase? _firestoreDatabase) => super
      .noSuchMethod(Invocation.setter(#firestoreDatabase, _firestoreDatabase),
          returnValueForMissingStub: null);
  @override
  _i4.Future<void> removeFavorite(String? cardId) => (super.noSuchMethod(
      Invocation.method(#removeFavorite, [cardId]),
      returnValue: _i4.Future<void>.value(),
      returnValueForMissingStub: _i4.Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> setFavorite(String? cardId) => (super.noSuchMethod(
      Invocation.method(#setFavorite, [cardId]),
      returnValue: _i4.Future<void>.value(),
      returnValueForMissingStub: _i4.Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<bool> isFavorite(String? cardId) =>
      (super.noSuchMethod(Invocation.method(#isFavorite, [cardId]),
          returnValue: _i4.Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<List<_i5.HearthstoneCard>> getFavorites() => (super.noSuchMethod(
      Invocation.method(#getFavorites, []),
      returnValue: _i4.Future<List<_i5.HearthstoneCard>>.value(
          <_i5.HearthstoneCard>[])) as _i4.Future<List<_i5.HearthstoneCard>>);
}
